allprojects {
    group 'com.wilmol'
    version = '1.0'
}

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.diffplug.spotless:spotless-plugin-gradle:3.22.0'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.diffplug.gradle.spotless'
    apply plugin: 'jacoco'

    sourceCompatibility = 11.0
    targetCompatibility = 11.0

    spotless {
        java {
            removeUnusedImports()
            importOrderFile rootProject.file('gradle/spotless/import-order')
            eclipse().configFile rootProject.file('gradle/spotless/code-formatting.xml')
        }
    }

    clean {
        // delete intellij build directories too
        delete 'out/'
    }

    test {
        maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
        useJUnitPlatform()
        testLogging {
            events 'started', 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled true
            csv.enabled true
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compile(
                // https://mvnrepository.com/artifact/com.google.guava/guava
                'com.google.guava:guava:27.1-jre',
                // https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305
                'com.google.code.findbugs:jsr305:3.0.2',
                // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
                'org.apache.logging.log4j:log4j-core:2.11.2',
        )

        // https://projectlombok.org/setup/gradle
        compileOnly 'org.projectlombok:lombok:1.18.6'
        annotationProcessor 'org.projectlombok:lombok:1.18.6'

        testCompile(
                // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
                'org.junit.jupiter:junit-jupiter-api:5.4.0',
                // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params
                'org.junit.jupiter:junit-jupiter-params:5.4.0',
                // https://mvnrepository.com/artifact/org.hamcrest/hamcrest-core
                'org.hamcrest:hamcrest-core:2.1',
        )

        // https://www.petrikainulainen.net/programming/testing/junit-5-tutorial-running-unit-tests-with-gradle/
        testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.4.0'
    }
}
